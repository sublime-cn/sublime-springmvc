<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.xlinyu.dept.dao.DeptMapper" >
  <resultMap id="BaseResultMap" type="com.xlinyu.dept.model.Dept" >
    <id column="id" property="id" jdbcType="VARCHAR" />
    <result column="parent_id" property="parentId" jdbcType="VARCHAR" />
    <result column="path" property="path" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="alias_name" property="aliasName" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="telephone" property="telephone" jdbcType="VARCHAR" />
    <result column="email" property="email" jdbcType="VARCHAR" />
    <result column="website" property="website" jdbcType="VARCHAR" />
    <result column="has_children" property="hasChildren" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Base_Column_List" >
    id, parent_id, path, name, alias_name, remark, address, telephone, email, website, 
    has_children
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String" >
    select 
    <include refid="Base_Column_List" />
    from sys_dept
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String" >
    delete from sys_dept
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.xlinyu.dept.model.Dept" >
    insert into sys_dept (id, parent_id, path, 
      name, alias_name, remark, 
      address, telephone, email, 
      website, has_children)
    values (#{id,jdbcType=VARCHAR}, #{parentId,jdbcType=VARCHAR}, #{path,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{aliasName,jdbcType=VARCHAR}, #{remark,jdbcType=VARCHAR}, 
      #{address,jdbcType=VARCHAR}, #{telephone,jdbcType=VARCHAR}, #{email,jdbcType=VARCHAR}, 
      #{website,jdbcType=VARCHAR}, #{hasChildren,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.xlinyu.dept.model.Dept" >
    insert into sys_dept
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="parentId != null" >
        parent_id,
      </if>
      <if test="path != null" >
        path,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="aliasName != null" >
        alias_name,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="telephone != null" >
        telephone,
      </if>
      <if test="email != null" >
        email,
      </if>
      <if test="website != null" >
        website,
      </if>
      <if test="hasChildren != null" >
        has_children,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=VARCHAR},
      </if>
      <if test="parentId != null" >
        #{parentId,jdbcType=VARCHAR},
      </if>
      <if test="path != null" >
        #{path,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="aliasName != null" >
        #{aliasName,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null" >
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="website != null" >
        #{website,jdbcType=VARCHAR},
      </if>
      <if test="hasChildren != null" >
        #{hasChildren,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.xlinyu.dept.model.Dept" >
    update sys_dept
    <set >
      <if test="parentId != null" >
        parent_id = #{parentId,jdbcType=VARCHAR},
      </if>
      <if test="path != null" >
        path = #{path,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="aliasName != null" >
        alias_name = #{aliasName,jdbcType=VARCHAR},
      </if>
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null" >
        telephone = #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="email != null" >
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="website != null" >
        website = #{website,jdbcType=VARCHAR},
      </if>
      <if test="hasChildren != null" >
        has_children = #{hasChildren,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.xlinyu.dept.model.Dept" >
    update sys_dept
    set parent_id = #{parentId,jdbcType=VARCHAR},
      path = #{path,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      alias_name = #{aliasName,jdbcType=VARCHAR},
      remark = #{remark,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      telephone = #{telephone,jdbcType=VARCHAR},
      email = #{email,jdbcType=VARCHAR},
      website = #{website,jdbcType=VARCHAR},
      has_children = #{hasChildren,jdbcType=INTEGER}
    where id = #{id,jdbcType=VARCHAR}
  </update>

  <select id="pdetp" resultMap="BaseResultMap">
    select * from sys_dept t where t.parent_id = '' or t.parent_id is null
  </select>

  <select id="listDept" parameterType="String" resultMap="BaseResultMap">
    select * from sys_dept t where t.parent_id = #{pid} order BY path DESC
  </select>

</mapper>